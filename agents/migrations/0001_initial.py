# Generated by Django 5.2 on 2025-09-09 07:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0002_coursefile'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='代理名称', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='代理描述')),
                ('agent_type', models.CharField(choices=[('question_answering', '答疑助手'), ('course_analysis', '课程分析助手'), ('assignment_grading', '作业批改助手')], help_text='代理类型', max_length=20)),
                ('config', models.JSONField(default=dict, help_text='代理配置参数')),
                ('is_active', models.BooleanField(default=True, help_text='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '代理配置',
                'verbose_name_plural': '代理配置',
            },
        ),
        migrations.CreateModel(
            name='AIInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('query', models.TextField(help_text='用户提问')),
                ('response', models.TextField(help_text='AI 回答')),
                ('interaction_type', models.CharField(choices=[('question', '学生答疑'), ('analysis', '课程分析'), ('grading', '作业批改')], help_text='交互类型', max_length=20)),
                ('context', models.JSONField(blank=True, default=dict, help_text='交互上下文')),
                ('feedback_score', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='用户反馈评分 (1-5)', null=True)),
                ('feedback_comment', models.TextField(blank=True, help_text='用户反馈评论')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interactions', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI 交互记录',
                'verbose_name_plural': 'AI 交互记录',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('course_outline', '课程大纲'), ('announcement', '课程公告'), ('assignment_answer', '作业标准答案'), ('faq', '常见问题')], help_text='文档来源类型', max_length=20)),
                ('source_id', models.IntegerField(help_text='来源对象 ID')),
                ('content', models.TextField(help_text='文档内容')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='文档元数据')),
                ('chunk_index', models.IntegerField(help_text='分块索引')),
                ('embedding', models.JSONField(blank=True, help_text='向量表示', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '知识库文档',
                'verbose_name_plural': '知识库文档',
                'indexes': [models.Index(fields=['source_type', 'source_id'], name='agents_know_source__32be36_idx'), models.Index(fields=['created_at'], name='agents_know_created_6c382d_idx')],
            },
        ),
        migrations.CreateModel(
            name='ToolUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tool_name', models.CharField(help_text='工具名称', max_length=100)),
                ('tool_input', models.JSONField(help_text='工具输入')),
                ('tool_output', models.TextField(help_text='工具输出')),
                ('execution_time', models.FloatField(help_text='执行时间 (秒)')),
                ('success', models.BooleanField(default=True, help_text='是否成功执行')),
                ('error_message', models.TextField(blank=True, help_text='错误信息')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('interaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_usages', to='agents.aiinteraction')),
            ],
            options={
                'verbose_name': '工具使用记录',
                'verbose_name_plural': '工具使用记录',
                'ordering': ['-created_at'],
            },
        ),
    ]
